// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Breed {
  Wild
  Domestic
}

enum Gender {
  Male
  Female
  Others
}

enum BloodGroup {
  A_POSITIVE
  A_NEGATIVE
  B_POSITIVE
  B_NEGATIVE
  AB_POSITIVE
  AB_NEGATIVE
  O_POSITIVE
  O_NEGATIVE
}

model User {
  id           Int             @id @default(autoincrement())
  name         String
  dateofBirth  String
  gender       Gender
  email        String          @unique
  bloodgroup   BloodGroup
  phoneNumber  String          @unique
  image        String
  password     String
  appointments Appointsments[] @relation("AppointmentUser")
  accessToken  String?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model Doctor {
  id           Int             @id @default(autoincrement())
  name         String
  dateofBirth  String
  genre        String
  degree       String
  gender       Gender
  email        String          @unique
  bloodgroup   BloodGroup
  phoneNumber  String          @unique
  image        String
  password     String
  accessToken  String?
  appointments Appointsments[] @relation("AppointmentDoctor")
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model Appointsments {
  id              Int      @id @default(autoincrement())
  appointmentDate DateTime
  user            User?    @relation("AppointmentUser", fields: [userId], references: [id])
  userId          Int?
  Doctor          Doctor?  @relation("AppointmentDoctor", fields: [doctorId], references: [id])
  doctorId        Int?
}
